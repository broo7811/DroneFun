from codrone_edu.drone import *
import multiprocessing
from pynput.keyboard import Key, Listener
import time
running = True
def emergencyStop(key):
    global running
    if key == Key.space:
        running = False

def MoveAndTurn():
    drone = Drone()
    drone.pair()
    drone.takeoff()
    battery = drone.get_battery()
    print(battery)
    UserChoice = input("Input number of times it turns before landing: ")
    if UserChoice != int:
        UserChoice = 0
    numDetect = 0
    bol = True
    while bol:
        if drone.detect_wall(125):
            drone.reset_move()
            drone.turn_left(90)
            print("wall detected")
            distance = drone.get_front_range()
            print("DISTANCE: " + str(distance))
            print(battery)
            numDetect = numDetect + 1
            if numDetect == int(UserChoice):
                bol = False
        drone.set_pitch(50)
        drone.move()


with Listener(on_press=emergencyStop) as listener:
    while running:
        thread1 = multiprocessing.Process(target=emergencyStop, args=(" ",))
        thread2 = multiprocessing.Process(target=MoveAndTurn())

        thread1.start()
        thread2.start()

        thread1.join()
        thread2.join()

        t1alive = thread1.is_alive()
        t2alive = thread2.is_alive()

        thread1.terminate()
        thread2.terminate()
        exit()
print("Program Complete")
exit()
